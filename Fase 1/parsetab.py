
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TkAnteriorCar TkArray TkAsignacion TkBarra TkBegin TkBool TkCarError TkCarEspecial TkCaracter TkCaracterError TkComa TkComilla TkConcatenacion TkConjuncion TkCorcheteAbre TkCorcheteCierra TkDesigual TkDisyuncion TkDiv TkDosPuntos TkEnd TkError TkErrorSol TkFalse TkFor TkFrom TkHacer TkId TkIf TkIgual TkInt TkLlaveAbre TkLlaveCierra TkMayor TkMayorIgual TkMenor TkMenorIgual TkMod TkMult TkNot TkNum TkOf TkOtherwise TkParAbre TkParCierra TkPrint TkPunto TkPuntoYComa TkRead TkResta TkSalto TkShift TkSiguienteCar TkStep TkSuma TkTab TkTo TkTrue TkValorAscii TkVar TkWhile TkWith\n\texpresion : TkBegin expresion TkEnd\n\t\n\texpresion : TkIf condicion TkHacer cuerpo TkEnd\n\t\n\tcuerpo : expresion cuerpo\n\t\t   | expresion\n\t\n\texpresion : expresion TkResta expresion\n\t\t\t  | expresion TkSuma expresion\n\t\t\t  | expresion TkDiv expresion\n\t\t\t  | expresion TkMult expresion\n\t\t\t  | expresion TkMod expresion\n\t\n\tcondicion : expresion TkMenor expresion\n\t\t\t  | expresion TkMayor expresion\n\t\n\texpresion : TkNum\n\t\t\t  | TkId\n\t'
    
_lr_action_items = {'TkIf':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,28,],[5,-13,-12,5,5,5,5,5,5,5,-5,-6,-9,-7,-8,-1,5,5,5,5,-2,]),'$end':([1,2,3,14,15,16,17,18,19,28,],[0,-13,-12,-5,-6,-9,-7,-8,-1,-2,]),'TkId':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,28,],[2,-13,-12,2,2,2,2,2,2,2,-5,-6,-9,-7,-8,-1,2,2,2,2,-2,]),'TkSuma':([1,2,3,11,13,14,15,16,17,18,19,23,25,26,28,],[7,-13,-12,7,7,7,7,7,7,7,-1,7,7,7,-2,]),'TkMult':([1,2,3,11,13,14,15,16,17,18,19,23,25,26,28,],[10,-13,-12,10,10,10,10,10,10,10,-1,10,10,10,-2,]),'TkMenor':([2,3,13,14,15,16,17,18,19,28,],[-13,-12,21,-5,-6,-9,-7,-8,-1,-2,]),'TkEnd':([2,3,11,14,15,16,17,18,19,23,24,27,28,],[-13,-12,19,-5,-6,-9,-7,-8,-1,-4,28,-3,-2,]),'TkResta':([1,2,3,11,13,14,15,16,17,18,19,23,25,26,28,],[6,-13,-12,6,6,6,6,6,6,6,-1,6,6,6,-2,]),'TkBegin':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,28,],[4,-13,-12,4,4,4,4,4,4,4,-5,-6,-9,-7,-8,-1,4,4,4,4,-2,]),'TkMayor':([2,3,13,14,15,16,17,18,19,28,],[-13,-12,22,-5,-6,-9,-7,-8,-1,-2,]),'TkMod':([1,2,3,11,13,14,15,16,17,18,19,23,25,26,28,],[8,-13,-12,8,8,8,8,8,8,8,-1,8,8,8,-2,]),'TkNum':([0,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,28,],[3,-13,-12,3,3,3,3,3,3,3,-5,-6,-9,-7,-8,-1,3,3,3,3,-2,]),'TkHacer':([2,3,12,14,15,16,17,18,19,25,26,28,],[-13,-12,20,-5,-6,-9,-7,-8,-1,-10,-11,-2,]),'TkDiv':([1,2,3,11,13,14,15,16,17,18,19,23,25,26,28,],[9,-13,-12,9,9,9,9,9,9,9,-1,9,9,9,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([20,23,],[24,27,]),'condicion':([5,],[12,]),'expresion':([0,4,5,6,7,8,9,10,20,21,22,23,],[1,11,13,14,15,16,17,18,23,25,26,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> TkBegin expresion TkEnd','expresion',3,'p_programa','parser.py',18),
  ('expresion -> TkIf condicion TkHacer cuerpo TkEnd','expresion',5,'p_condicional','parser.py',26),
  ('cuerpo -> expresion cuerpo','cuerpo',2,'p_cuerpo','parser.py',32),
  ('cuerpo -> expresion','cuerpo',1,'p_cuerpo','parser.py',33),
  ('expresion -> expresion TkResta expresion','expresion',3,'p_expresion','parser.py',38),
  ('expresion -> expresion TkSuma expresion','expresion',3,'p_expresion','parser.py',39),
  ('expresion -> expresion TkDiv expresion','expresion',3,'p_expresion','parser.py',40),
  ('expresion -> expresion TkMult expresion','expresion',3,'p_expresion','parser.py',41),
  ('expresion -> expresion TkMod expresion','expresion',3,'p_expresion','parser.py',42),
  ('condicion -> expresion TkMenor expresion','condicion',3,'p_guardia','parser.py',48),
  ('condicion -> expresion TkMayor expresion','condicion',3,'p_guardia','parser.py',49),
  ('expresion -> TkNum','expresion',1,'p_terminal','parser.py',57),
  ('expresion -> TkId','expresion',1,'p_terminal','parser.py',58),
]
